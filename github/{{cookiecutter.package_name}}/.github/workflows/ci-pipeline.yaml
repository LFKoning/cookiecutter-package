name: code-quality-checks
run-name: Code Quality Checks
on: [push, pull_request]

jobs:

  code-quality-checks:

    runs-on: ubuntu-latest

    # Set permissions, required for final reporter step.
    permissions:
      id-token: write
      contents: read
      checks: write

    steps:

      # Checkout Github repo.
      - name: Checkout package repository.
        uses: actions/checkout@v4

      # Set up Python interpreter.
      - name: Setup Python interpreter.
        uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"

      # Install package with development dependencies.
      - name: Installing package (development).
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -e .[dev]

      # Run pip-audit to scan for vulnerabilities in working environment.
      - name: Checking vulnerabilities with pip-audit.
        run: |
          python -m pip install pip-audit
          python -m pip_audit --skip-editable
        continue-on-error: true

      # Run isort, install if needed.
      - name: Running isort.
        run: |
          python -m pip install isort
          python -m isort -c -rc src/

      # Run black, install if needed.
      - name: Formatting with black.
        run: |
          python -m pip install black
          python -m black --check src/

      # Run pylint, install if needed.
      - name: Linting with pylint.
        run: |
          python -m pip install pylint
          python -m pylint src/

      # Running unit tests with pytest.
      - name: Unit testing with pytest
        run: |
          pip install pytest pytest-cov
          pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

      # Upload unit test results, even if tests failed.
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: junit/test-results.xml
        if: always()

      # Generate test report for GitHub interface.
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JUnit Test Results
          path: junit/test-results.xml
          reporter: java-junit
